<template>
  <TabHeaders :navTitle="navTitle" :leftArrow="false" />

  <CellGroup inset class="cellGroup" style="margin: 10px">
    <Field
      label="设备ID"
      placeholder="请输入设备ID"
      input-align="right"
      v-model="CarInfo[0]"
    />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="手机号码"
      type="tel"
      placeholder="请输入手机号码"
      input-align="right"
      v-model="CarInfo[1]"
    >
    </Field>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="车牌号"
      placeholder="请输入车牌号"
      input-align="right"
      v-model="CarInfo[2]"
    >
    </Field>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Cell
      title="车牌颜色"
      is-link
      :value="deviceColor"
      @click="showPicker = true"
    />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="区域代码"
      placeholder="请输入区域代码"
      input-align="right"
      v-model="CarInfo[4]"
    >
    </Field>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="制造商编号"
      placeholder="请输入制造商编号"
      input-align="right"
      v-model="CarInfo[5]"
    >
    </Field>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="VIN车架号"
      placeholder="请输入VIN车架号"
      input-align="right"
      v-model="CarInfo[6]"
    >
    </Field>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="车牌分类"
      placeholder="请输入车牌分类"
      input-align="right"
      v-model="CarInfo[7]"
    >
    </Field>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="发动机号"
      placeholder="请输入发动机号"
      input-align="right"
      v-model="CarInfo[8]"
    >
    </Field>
  </CellGroup>

  <Popup round v-model:show="showPicker" position="bottom">
    <Picker
      title="协议类型"
      :columns="columns"
      @cancel="showPicker = false"
      :default-index="deviceColorIndex"
      @confirm="onConfirm"
    />
  </Popup>

  <StickyBottom
    :guide="guide"
    @BottomSubmit="BottomSubmit"
    @BottomSearch="BottomSearch"
  />
</template>

<script setup>
import TabHeaders from "@/components/tab.vue";
import StickyBottom from "@/components/stickyBottom.vue";
import { CellGroup, Field, Popup, Picker, Cell, Toast } from "vant"; // Checkbox
import { defineComponent, onMounted, ref } from "vue";
import { postAN } from "@/utlis/AdApi";
import { getQueryString } from "@/utlis/QueryStr";

const CarInfo = ref([]); // 获取到的参数集合
const columns = ref(["蓝色", "黄色", "黑色", "白色", "绿色", "黄绿色", "其它"]);
const showPicker = ref(false); // 弹出层是否显示
const guide = ref(false); // 是否是向导模式
const nowCmd = ref(""); // 当前使用的指令
const deviceColorIndex = ref(1);
const deviceColor = ref("");
const navTitle = ref("车辆信息"); // 标题

// 保存
const BottomSubmit = () => {
  CarInfo.value[3] = deviceColorIndex.value;
  var cmds = nowCmd.value + "," + CarInfo.value.join(",");
  postAN.ANsendSetting(cmds);
  return false;
};
// 查询
const BottomSearch = () => {
  Toast("查询指令下发成功");
  postAN.ANSend(nowCmd.value);
};

const onConfirm = (e) => {
  let index = 0;
  let text = "";
  for (var i = 0; i < columns.value.length; i++) {
    if (columns.value[i] == e) {
      // eslint-disable-next-line no-unused-vars
      index = i + 1;
      // eslint-disable-next-line no-unused-vars
      text = columns.value[i];
    }
  }
  if(index == 7) {
    deviceColorIndex.value = 9;
  } else {
    deviceColorIndex.value = index;
  }
  deviceColor.value = text;
  showPicker.value = false;
};
defineComponent({
  name: "yunweibao-CarInfo",
});
// -------------------------------------------------------------------
// 安卓回调函数
const callJSResult = (str) => {
  var cmds = str.split(";")[0]
  var cmdArr = cmds.split(",").splice(1);
  CarInfo.value = cmdArr; // 获取到的参数集合
  console.log(cmdArr)
  deviceColorIndex.value = cmdArr[3] - 1; // 读取设备颜色
  
  deviceColor.value = columns.value[cmdArr[3] - 1];
};
// 安卓成功失败回调
const callJSResult_Status = (str) => {
  if (str.indexOf("Success") !== -1) {
    Toast.success("下发成功");
  } else {
    Toast.fail("下发失败");
  }
};

// 向安卓发送指令
const androidStatus_fn = () => {
  var param = getQueryString("param").split("@"); // 解析出指令
  if (param[7] != undefined) {
    // 向导模式
    guide.value = true;
    return false;
  }
  nowCmd.value = param[1]; // 当前使用的指令
  postAN.ANSend(param[1]);
};

onMounted(() => {
  window.callJSResult = callJSResult;
  window.callJSResult_Status = callJSResult_Status;
  androidStatus_fn();
});


</script>

<style>
</style>
