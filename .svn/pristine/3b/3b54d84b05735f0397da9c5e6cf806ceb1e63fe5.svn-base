<template>
  <TabHeaders :navTitle="navTitle" :leftArrow="false" :lavelMuch="true" />

  <CellGroup inset style="margin: 10px" class="cellGroup">
    <Cell>
      <template #title>
        <label style="float: left; margin-right: 10px">启用</label>
        <Checkbox
          v-model="setAlarmInfo[1]"
          shape="square"
          icon-size="15px"
          style="margin-top: 5px"
        ></Checkbox>
      </template>
    </Cell>
  </CellGroup>

  <CellGroup inset style="margin: 10px" class="cellGroup">
    <Cell>
      <template #title>
        <label style="float: left; margin-right: 10px">蜂鸣器</label>
        <Checkbox
          v-model="setAlarmInfo[2]"
          shape="square"
          icon-size="15px"
          style="margin-top: 5px"
        ></Checkbox>
      </template>
    </Cell>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="事件名称"
      placeholder="请输入事件名称"
      input-align="right"
      v-model="setAlarmInfo[4]"
    />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Cell title="类型">
      <template #right-icon>
        <RadioGroup v-model="setAlarmInfo[6]">
          <Radio
            name="1"
            shape="square"
            style="float: left; margin-right: 10px"
            icon-size="15px"
            >正触发</Radio
          >
          <Radio name="0" shape="square" icon-size="15px">负触发</Radio>
        </RadioGroup>
      </template>
    </Cell>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="延时"
      placeholder="请输入延时"
      type="digit"
      input-align="right"
      v-model="setAlarmInfo[8]"
    >
      <template #button>
        <label>S</label>
      </template>
    </Field>
  </CellGroup>

  <CellGroup inset style="margin: 10px" class="cellGroup">
    <Cell title="上报类型" is-link :value="type" @click="showPickerFn(1)" />
  </CellGroup>

  <CellGroup inset style="margin: 10px" class="cellGroup">
    <Cell title="抓拍模式" is-link :value="model" @click="showPickerFn(2)" />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="连拍张数"
      placeholder="请输入连拍张数"
      type="digit"
      input-align="right"
      v-model="setAlarmInfo[12]"
    />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="连拍间隔"
      placeholder="请输入连拍间隔"
      type="digit"
      input-align="right"
      v-model="setAlarmInfo[13]"
      :disabled="inputDisabled"
    />
  </CellGroup>

  <Popup round v-model:show="showPicker" position="bottom">
    <Picker
      title="协议类型"
      :default-index="defaultIndex"
      :columns="columns"
      @cancel="showPicker = false"
      @confirm="onConfirm"
    />
  </Popup>

  <StickyBottom @BottomSearch="BottomSearch" @BottomSubmit="BottomSubmit" />
</template>

<script setup>
import TabHeaders from "@/components/tab.vue";
import StickyBottom from "@/components/stickyBottom.vue";
import {
  CellGroup,
  Cell,
  Toast,
  Checkbox,
  RadioGroup,
  Radio,
  Field,
  Popup,
  Picker,
} from "vant";
import { defineComponent, ref, onMounted } from "vue";
import { useRoute } from "vue-router";
import { postAN } from "@/utlis/AdApi";
// import { getQueryString } from "@/utlis/QueryStr";

let route = useRoute();
const item = route.query.item; // 正在使用的指令
const allAlarm = route.query.allAlarm; // 完整的指令
const index = route.query.index; // 使用的指令段
const cmd = route.query.cmd; // 使用的指令头

const columns = ref([]);
const columns2 = ref(["不上报", "正常", "不报警"]);
const columns3 = ref(["单拍", "双拍", "连拍"]);

// 标题
const navTitle = ref("报警输入状态");
const setAlarmInfo = ref(item);
const defaultIndex = ref(1);
const showPicker = ref(false);
const type = ref("");
const model = ref("");
const statePocker = ref(1);
const inputDisabled = ref(true);

type.value = columns2.value[setAlarmInfo.value[9]];
model.value = columns3.value[setAlarmInfo.value[11]];

// 查询
const BottomSearch = () => {
  Toast("查询指令下发成功");
  postAN.ANSend(cmd);
  return false;
};

// 保存
const BottomSubmit = () => {
  let alarm = [...setAlarmInfo.value];
  alarm[1] = +alarm[1];
  alarm[9] = columns2.value.indexOf(type.value);
  alarm[11] = columns3.value.indexOf(model.value);
  allAlarm[index] = alarm;
  var cmds =
    cmd + "," + allAlarm.join("!").replace(/,/g, "~").replace(/!/g, ",");
  // console.log(cmds);
  postAN.ANsendSetting(cmds);
  return false;
};

// 控制显示的 columns
const showPickerFn = (num) => {
  if (num == 1) {
    columns.value = columns2;
    defaultIndex.value = columns2.value.indexOf(type.value);
  } else if (num == 2) {
    columns.value = columns3;
    defaultIndex.value = columns3.value.indexOf(model.value);
  }
  statePocker.value = num;
  showPicker.value = true;
};

// 选择器
const onConfirm = (value) => {
  showPicker.value = false;
  if (statePocker.value == 1) {
    // 上报类型
    type.value = value;
  } else if (statePocker.value == 2) {
    // 抓拍模式
    model.value = value;
    let select = columns3.value.indexOf(model.value);
    // console.log(select);
    inputDisabled.value = true;
    if (select == 0) {
      setAlarmInfo.value[12] = 1;
    } else if (select == 1) {
      setAlarmInfo.value[12] = 2;
    } else if (select == 2) {
      inputDisabled.value = false;
    }
  }
};

// 命名空间
defineComponent({
  name: "yunweibao-Alarm",
});

// -------------------------------------------------------------------
// 安卓回调函数
const callJSResult = (str) => {
  var cmds = str.split(";")[0];
  var cmdArr = cmds.split(",").splice(2);
  const alarmArr = [];
  for (var i = 0; i < cmdArr.length; i++) {
    var item = cmdArr[i].split("~");
    alarmArr.push(item);
  }
  setAlarmInfo.value = alarmArr[index];
  type.value = columns2.value[setAlarmInfo.value[9]];
  model.value = columns3.value[setAlarmInfo.value[11]];
};
// 安卓成功失败回调
const callJSResult_Status = (str) => {
  if (str.indexOf("Success") !== -1) {
    Toast.success("下发成功");
  } else {
    Toast.fail("下发失败");
  }
};

// // 向安卓发送指令
// const androidStatus_fn = () => {
//   var param = getQueryString("param").split("@"); // 解析出指令
//   postAN.ANSend(param[1]);
// };

onMounted(() => {
  window.callJSResult = callJSResult;
  window.callJSResult_Status = callJSResult_Status;
  //   androidStatus_fn();
});
</script>

<style>
.images {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  /* background: red; */
  width: 93%;
  margin: auto;
}
</style>
