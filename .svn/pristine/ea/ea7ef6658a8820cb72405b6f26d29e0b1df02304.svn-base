<template>
  <TabHeaders :navTitle="navTitle" :leftArrow="false" />

  <CellGroup inset style="margin: 10px" class="cellGroup">
    <Cell>
      <template #title>
        <label style="float: left; margin-right: 10px">启用</label>
        <Checkbox
          v-model="checked"
          shape="square"
          icon-size="15px"
          style="margin-top: 5px"
        ></Checkbox>
      </template>
    </Cell>
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field
      label="电话号码"
      type="tel"
      placeholder="请输入电话号码"
      input-align="right"
      v-model="diAl[1]"
    />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field label="接入点" placeholder="请输入接入点" input-align="right" v-model="diAl[2]" />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field label="用户名" placeholder="请输入用户名" input-align="right" v-model="diAl[3]" />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field label="密码" placeholder="请输入密码" input-align="right" v-model="diAl[4]" />
  </CellGroup>

  <CellGroup inset style="margin: 10px">
    <Field label="MTU" placeholder="请输入MTU" input-align="right" v-model="diAl[5]" />
  </CellGroup>

  <CellGroup inset style="margin: 20px; height: 40px">
    <Button type="primary" style="width: 100%" @click="initClick">出厂设置</Button>
  </CellGroup>

  <keep-alive>
    <StickyBottom 
    :guide="guide"
    @BottomSubmit="BottomSubmit"
    @BottomSearch="BottomSearch"
    @BottomNext="BottomNext"
    />
  </keep-alive>
</template>

<script setup>
import TabHeaders from "@/components/tab.vue";
import StickyBottom from "@/components/stickyBottom.vue";
import { CellGroup, Field, Cell, Checkbox, Button,Toast } from "vant";
import { defineComponent, ref ,onMounted} from "vue";
import { postAN } from "@/utlis/AdApi";
import { getQueryString } from "@/utlis/QueryStr";
import { useRoute } from "vue-router";

let route = useRoute();
const guideRouter = route.query.guide;
const navTitle = ref("3G/4G");// 标题
const diAl = ref([]); // 获取到的参数集合
const guide = ref(false); // 是否是向导模式
const checked = ref(true);
const nowCmd = ref(""); // 当前使用的指令
const initCmd = ref([]);

var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(0,1,1);
console.log(fruits)

// 出厂设置
const initClick = () => {
  diAl.value.splice(1,3)
  diAl.value.splice(1,1,...initCmd.value);
}

// 保存
const BottomSubmit = () => {
  diAl.value.splice(0,1,+checked.value);
  var cmds = nowCmd.value + "," + diAl.value.join(",");
  postAN.ANsendSetting(cmds);
  return false;
};
// 查询
const BottomSearch = () => {
  Toast("查询指令下发成功");
  postAN.ANSend(nowCmd.value);
};

defineComponent({
  name: "yunweibao-SettingsIP",
});


// -------------------------------------------------------------------
// 安卓回调函数
const callJSResult = (str) => {
  var cmds = str.split(";")[0]
  var cmdArr = cmds.split(",").splice(1);
  console.log("返回数据 "+ cmdArr);
  diAl.value = cmdArr[2].split("*"); // 获取到所有的数据
  initCmd.value = cmdArr[0].split("*"); // 出厂设置
  checked.value = !!+diAl.value[0]; // 启用
};

// 安卓成功失败回调
const callJSResult_Status = (str) => {
  if (str.indexOf("Success") !== -1) {
    Toast.success("下发成功");
  } else {
    Toast.fail("下发失败");
  }
};
// 向安卓发送指令
const androidStatus_fn = () => {
  var param = ""
  if(guideRouter) {
    var guideIndex = sessionStorage.guideIndex;
    guide.value = true;
    var guideArr = JSON.parse(sessionStorage.guide);
    param = guideArr[guideIndex].split("@")
  } else {
    param = getQueryString("param").split("@"); // 解析出指令
  }
  console.log(nowCmd.value);
  nowCmd.value = param[1]; // 当前使用的指令
  postAN.ANSend(param[1]);
};

androidStatus_fn();

onMounted(() => {
  window.callJSResult = callJSResult;
  window.callJSResult_Status = callJSResult_Status;
  
});
</script>

<style>
</style>
