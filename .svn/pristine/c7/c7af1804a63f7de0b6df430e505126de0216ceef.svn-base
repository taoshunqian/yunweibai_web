<template>
  <TabHeaders :navTitle="navTitle" :leftArrow="false" />
  <VanImage
    height="220"
    src="https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg"
  />
  <!-- 类型 -->
  <CellGroup inset class="cell-group">
    <Cell
      title="类型"
      is-link
      :value="columnsOilType[oilCmd[2]]"
      @click="showPickerFn(1)"
    >
    </Cell>
  </CellGroup>
  <!-- 报警阀值 -->
  <CellGroup inset class="cell-group">
    <Field
      v-model="oilCmd[3]"
      label="报警阀值"
      placeholder="请输入"
      readonly
      input-align="right"
    ></Field>
  </CellGroup>
  <!-- 当前油位 -->
  <CellGroup inset class="cell-group">
    <Field
      label="当前油位"
      v-model="oilCmd[0]"
      placeholder="请输入"
      readonly
      input-align="right"
    >
      <template #button>
        <span>%</span>
      </template></Field
    >
  </CellGroup>
  <!-- 当前油量 -->
  <CellGroup inset class="cell-group">
    <Field
      label="当前油量"
      v-model="oilCmd[1]"
      placeholder="请输入"
      readonly
      input-align="right"
      label-class="disabledStyle"
    >
      <template #button>
        <span>L</span>
      </template>
    </Field>
  </CellGroup>

  <CellGroup inset class="cell-group" v-if="oilCmd[4] == 0">
    <Cell title="标定数目" :value="oilCmd[4]"> </Cell>
  </CellGroup>

  <!-- 标定数目 -->
  <div style="margin-top: 20px; background: #ffffff" v-else>
    <Row>
      <Col span="16">
        <CellGroup>
          <Field
            label="标定数目"
            placeholder="请输入标定数目"
            input-align="right"
            v-model="oilCmd[4]"
            readonly
          />
        </CellGroup>
      </Col>
      <Col span="8">
        <Button
          type="danger"
          size="small"
          style="margin-right: 10px; margin-top: 6px; float: right"
          @click="deleteCalibrationInfoFn"
          >删除</Button
        >
        <Button
          type="primary"
          size="small"
          style="float: right; margin-top: 6px; margin-right: 10px"
          @click="addCalibrationInfoFn"
          >添加</Button
        >
      </Col>
    </Row>
  </div>

  <Row>
    <Col offset="1" span="22">
      <CellGroup
        style="margin-top: 10px"
        v-for="(item, index) in addCalibrationInfo"
        :key="index"
      >
        <Cell>
          <template #title>
            <Checkbox shape="square" v-model="item.check"
              >序号 {{ index + 1 }}</Checkbox
            >
          </template>
        </Cell>
        <Field
          v-model="item.value1"
          type="tel"
          label="标定增量"
          label-width="120"
          placeholder="请输入"
          input-align="right"
        >
          <template #button>
            <span>L</span>
          </template>
        </Field>
        <Field
          v-model="item.value2"
          type="tel"
          label="标定油位"
          label-width="120"
          placeholder="请输入"
          input-align="right"
        >
          <template #button>
            <span>%</span>
          </template>
        </Field>
      </CellGroup>
    </Col>
  </Row>

  <Popup round v-model:show="showPicker" position="bottom">
    <AlarmPicker
      :columns="columns"
      :showPicker="showPicker"
      :defaultIndex="defaultIndex"
      @confirm="onConfirm"
      @cancel="showPicker = false"
    />
  </Popup>

  <footer style="padding-bottom: 50px"></footer>

  <StickyBottom @BottomSubmit="BottomSubmit" @BottomSearch="BottomSearch" />
</template>


<script setup>
/*
报警器 和 刷卡器 共用
*/
import TabHeaders from "@/components/tab.vue";
import StickyBottom from "@/components/stickyBottom.vue";
import AlarmPicker from "@/components/Alarm//AlarmPicker.vue";
import {
  Col,
  Row,
  Cell,
  Field,
  CellGroup,
  Button,
  Checkbox,
  Toast,
  Popup,
  Image as VanImage,
} from "vant"; // Checkbox
import { defineComponent, ref, onMounted } from "vue";
import { postAN } from "@/utlis/AdApi";
import { useI18n } from "vue-i18n";
const { t } = useI18n();
const columnsOilType = ["TUB", "N08", "PLUG"];

const navTitle = ref("油位");
const addCalibrationInfo = ref([]);
const showPicker = ref(false);
const columns = ref([]);
const defaultIndex = ref(0);
const oilCmd = ref([]);

const BottomSearch = () => {
  addCalibrationInfo.value = [];
  androidStatus_fn();
};
// 保存
const BottomSubmit = () => {
  console.log(oilCmd.value);
};

// 弹出 picker 选择器
const showPickerFn = (num) => {
  showPicker.value = true;
  switch (num) {
    case 1: // 协议类型
      columns.value = columnsOilType;
      defaultIndex.value = oilCmd.value[2];
      break;
  }
};

// picker 弹出层确认
const onConfirm = (items) => {
  oilCmd.value[2] = items[1];
  showPicker.value = false;
};

// 删除
const deleteCalibrationInfoFn = () => {
  var arr = addCalibrationInfo.value;
  arr.filter((value, index, arr) => {
    if (value.check) {
      arr.splice(index,1);
    }
  });
};

// 添加
const addCalibrationInfoFn = () => {
  var arr = addCalibrationInfo.value;
  if (arr.length == 15) {
    Toast.fail("最多15组");
    return false;
  }
  arr.push({
    check: false,
    value1: "1",
    value2: "1",
  });
};

// 命名空间
defineComponent({
  name: "yunweibao-ToilLevel",
});

// -------------------------------------------------------------------
// 安卓回调函数r
const callJSResult = (str) => {
  var cmds = str.split(";")[0];
  var cmdArr = cmds.split(",").splice(1);
  console.warn(cmdArr);
  oilCmd.value = cmdArr;
};
// 安卓成功失败回调
const callJSResult_Status = (str) => {
  if (str.indexOf("Success") !== -1) {
    Toast.success(t("toast[1]"));
  } else {
    Toast.fail(t("toast[2]"));
  }
};

// 向安卓发送指令
const androidStatus_fn = () => {
  postAN.ANSend("$OILPARAM");
};
androidStatus_fn();

onMounted(() => {
  window.callJSResult = callJSResult;
  window.callJSResult_Status = callJSResult_Status;
});
</script>

<style scoped>
.cell-group {
  margin: 10px;
}
.checkbox {
  margin-top: 0px;
  margin-bottom: 15px;
}
.trInfo {
  width: 30vh;
  text-align: center;
  height: 30px;
}
</style>